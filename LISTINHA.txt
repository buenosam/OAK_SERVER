const jwt = require('jsonwebtoken');



CREATE DATABASE OAK;

USE OAK;

xxxxxxxxxxxxxxxxxxxxxxx
CREATE TABLE usuarios (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome_usuario VARCHAR(48) NOT NULL,
    senha VARCHAR(128) NOT NULL,  
    tipo_usuario ENUM('aluno', 'admin') NOT NULL
);


CREATE TABLE salas (
    id INT PRIMARY KEY AUTO_INCREMENT,
    numero_sala INT NOT NULL,
    capacidade INT,
    tipo_sala ENUM('sala_de_aula', 'laboratorio', 'biblioteca', 'auditorio') NOT NULL,
    andar_sala INT NOT NULL
);

xxxxxxxxxxxxxxxxxxxxxxxx
CREATE TABLE turmas (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nome_turma VARCHAR(12) NOT NULL,  
    ano_letivo INT,
    periodo ENUM('matutino', 'vespertino', 'noturno') NOT NULL,
    sala_id INT,
    FOREIGN KEY (sala_id) REFERENCES salas(id)
);

xxxxxxxxxxxxxxxxxx
CREATE TABLE alunos (
    id INT PRIMARY KEY AUTO_INCREMENT,
    rm INT NOT NULL,
    nome VARCHAR(48) NOT NULL,
    turma_id INT,
    rg VARCHAR(9),
    cpf VARCHAR(11),
    telefone VARCHAR(16),
    endereco VARCHAR(255),
    email VARCHAR(64) NOT NULL,
    status BIT NOT NULL,
    usuario_id INT,
    FOREIGN KEY (turma_id) REFERENCES turmas(id),
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
);


xxxxxxxxxxxxxx
CREATE TABLE registros (
    id INT PRIMARY KEY AUTO_INCREMENT,
    aluno_id INT,
    horario DATETIME,
    entrada_saida ENUM('entrada', 'saida') NOT NULL,
    status ENUM('autorizado', 'negado') NOT NULL,
    justificativa TEXT,
    FOREIGN KEY (aluno_id) REFERENCES alunos(id)
);


const hoje = new Date()
hoje.getDate() // O dia do mês
hoje.getDay() // O valor inteiro do dia da semana
hoje.getFullYear() // O ano com quatro dígitos
hoje.getHours() // A hora do dia
hoje.getMilliseconds() // O número de milissegundos desde o ultimo segundo
hoje.getMinutes() // O número de minutos desde a última hora
hoje.getMonth() // o mês do ano
hoje.getTime() // O número de milissegundos desde a meia noite de 1° de janeiro de 1970
hoje.TolocaleString() // A data e hora local em formato de string




1 - aluno loga no app (endpoint /login com POST de usuario e senha)
2 - Se usuario e senha okay -> retorna dados do aluno
3 - com dados do aluno ele cria a carteirinha no app
4 - O QRCode deve ter o RM
5 - O leitor dde QRCode vai ler o QRCode e enviar o RM pro endpoint (/validate-student-id)
6 - Se o RM exxistir -> adiciona um registro de entrada ou saída na tabela registros
